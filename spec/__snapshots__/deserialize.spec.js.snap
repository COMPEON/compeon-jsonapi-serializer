// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deserialize when on the resource level with a resource array deserializes the links 1`] = `
Array [
  Object {
    "firstName": "Nico",
    "id": "123",
    "lastName": "Peters",
    "links": Object {
      "self": "http://some-url.com/123",
    },
  },
  Object {
    "firstName": "Karl",
    "id": "124",
    "lastName": "Maschmann",
    "links": Object {
      "self": "http://some-url.com/124",
    },
  },
]
`;

exports[`deserialize when on the resource level with a single resource deserializes the links 1`] = `
Object {
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
  "links": Object {
    "self": "http://some-url.com/123",
  },
}
`;

exports[`deserialize with a 1:1 relationship with a local id deserializes the json 1`] = `
Object {
  "company": Object {
    "lid": "666",
  },
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:1 relationship with a normal id deserializes the json 1`] = `
Object {
  "company": Object {
    "id": "666",
  },
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:1 relationship with includes with a local id deserializes the json 1`] = `
Object {
  "company": Object {
    "city": "Düsseldorf",
    "lid": "666",
    "name": "Compeon GmbH",
  },
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:1 relationship with includes with a normal id deserializes the json 1`] = `
Object {
  "company": Object {
    "city": "Düsseldorf",
    "id": "666",
    "name": "Compeon GmbH",
  },
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:n relationship with a local id deserializes the json 1`] = `
Object {
  "companies": Array [
    Object {
      "lid": "666",
    },
    Object {
      "id": "667",
    },
  ],
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:n relationship with a normal id deserializes the json 1`] = `
Object {
  "companies": Array [
    Object {
      "id": "666",
    },
    Object {
      "id": "667",
    },
  ],
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:n relationship with deeply nested relationships deserializes the json 1`] = `
Object {
  "company": Object {
    "id": "666",
    "tags": Array [
      Object {
        "id": "12",
      },
      Object {
        "id": "17",
      },
    ],
  },
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:n relationship with deeply nested relationships does not deserialize attributes directly included in a relation 1`] = `
Object {
  "company": Object {
    "id": "666",
    "name": "Compeon Gmbh",
    "tags": Array [
      Object {
        "id": "12",
      },
    ],
  },
  "id": "823",
  "lastName": "Peters",
  "name": "Nico",
}
`;

exports[`deserialize with a 1:n relationship with includes with a local id deserializes the json 1`] = `
Object {
  "companies": Array [
    Object {
      "city": "Düsseldorf",
      "lid": "666",
      "name": "Compeon GmbH",
    },
    Object {
      "city": "Düsseldorf",
      "id": "667",
      "name": "Compeon 4.0 GmbH",
    },
  ],
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:n relationship with includes with a normal id deserializes the json 1`] = `
Object {
  "companies": Array [
    Object {
      "city": "Düsseldorf",
      "id": "666",
      "name": "Compeon GmbH",
    },
    Object {
      "city": "Düsseldorf",
      "id": "667",
      "name": "Compeon 4.0 GmbH",
    },
  ],
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with a 1:n relationship with relationships inside an array of resources deserializes the json 1`] = `
Array [
  Object {
    "company": Object {
      "city": "Düsseldorf",
      "lid": "666",
      "name": "Compeon GmbH",
    },
    "firstName": "Nico",
    "id": "123",
    "lastName": "Peters",
  },
  Object {
    "company": Object {
      "city": "Düsseldorf",
      "lid": "666",
      "name": "Compeon GmbH",
    },
    "firstName": "Frank",
    "id": "234",
    "lastName": "Wüller",
    "tags": Array [
      Object {
        "id": "912",
        "name": "Banking",
      },
      Object {
        "id": "56",
        "name": "CEO",
      },
    ],
  },
]
`;

exports[`deserialize with a 1:n relationship with relationships with links deserializes the json 1`] = `
Object {
  "companies": Array [
    Object {
      "city": "Düsseldorf",
      "id": "666",
      "links": Object {
        "self": "htpp://ulf.de/companies/666",
      },
      "name": "Compeon GmbH",
    },
    Object {
      "city": "Düsseldorf",
      "id": "667",
      "name": "Compeon 4.0 GmbH",
    },
  ],
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with an array of resources with valid attributes deserializes the json 1`] = `
Array [
  Object {
    "firstName": "Nico",
    "id": "123",
    "lastName": "Peters",
  },
  Object {
    "firstName": "Frank",
    "id": "234",
    "lastName": "Wüller",
  },
]
`;

exports[`deserialize with empty relationships ignores the relationship 1`] = `
Object {
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with links when on the root level with a resource array deserializes the links 1`] = `
Array [
  Object {
    "firstName": "Nico",
    "id": "123",
    "lastName": "Peters",
    "rootLinks": Object {
      "dashboard": Object {
        "meta": Object {
          "title": "Dashboard",
        },
        "url": "http://example.com",
      },
    },
  },
  Object {
    "firstName": "Karl",
    "id": "124",
    "lastName": "Maschmann",
    "rootLinks": Object {
      "dashboard": Object {
        "meta": Object {
          "title": "Dashboard",
        },
        "url": "http://example.com",
      },
    },
  },
]
`;

exports[`deserialize with links when on the root level with a single resource deserializes the links 1`] = `
Object {
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
  "rootLinks": Object {
    "dashboard": Object {
      "meta": Object {
        "title": "Dashboard",
      },
      "url": "http://example.com",
    },
  },
}
`;

exports[`deserialize with relationships that have no identifier ignores the relationship 1`] = `
Object {
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;

exports[`deserialize with root and resource level links with a resource array deserializes the links 1`] = `
Array [
  Object {
    "firstName": "Nico",
    "id": "123",
    "lastName": "Peters",
    "links": Object {
      "self": "http://some-url.com/123",
    },
    "rootLinks": Object {
      "dashboard": Object {
        "meta": Object {
          "title": "Dashboard",
        },
        "url": "http://example.com",
      },
    },
  },
  Object {
    "firstName": "Karl",
    "id": "124",
    "lastName": "Maschmann",
    "links": Object {
      "self": "http://some-url.com/124",
    },
    "rootLinks": Object {
      "dashboard": Object {
        "meta": Object {
          "title": "Dashboard",
        },
        "url": "http://example.com",
      },
    },
  },
]
`;

exports[`deserialize with root and resource level links with a single resource deserializes the links 1`] = `
Object {
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
  "links": Object {
    "self": "http://some-url.com/123",
  },
  "rootLinks": Object {
    "dashboard": Object {
      "meta": Object {
        "title": "Dashboard",
      },
      "url": "http://example.com",
    },
  },
}
`;

exports[`deserialize with simple attributes with JSONAPI errors with an error array returns the errors 1`] = `
Array [
  Object {
    "id": "123",
    "links": Object {
      "about": "htpp://ulf.de",
    },
    "title": "Title",
  },
]
`;

exports[`deserialize with simple attributes with invalid attributes when data does not exist deserializes the json 1`] = `Object {}`;

exports[`deserialize with simple attributes with invalid attributes when data is empty deserializes the json 1`] = `Object {}`;

exports[`deserialize with simple attributes with valid attributes deserializes the json 1`] = `
Object {
  "firstName": "Nico",
  "id": "123",
  "lastName": "Peters",
}
`;
