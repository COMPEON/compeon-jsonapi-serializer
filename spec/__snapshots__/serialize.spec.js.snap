// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`serialize with a 1:1 relationship when no relationship identifier is found ignores the relationship 1`] = `
Object {
  "data": Object {
    "id": "123",
    "type": "users",
  },
}
`;

exports[`serialize with a 1:1 relationship with a local id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "company": Object {
        "data": Object {
          "lid": "666",
          "type": "companies",
        },
      },
    },
    "type": "users",
  },
}
`;

exports[`serialize with a 1:1 relationship with a normal id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "company": Object {
        "data": Object {
          "id": "666",
          "type": "companies",
        },
      },
    },
    "type": "users",
  },
}
`;

exports[`serialize with a 1:1 relationship with a polymorphic relationship serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "organization": Object {
        "data": Object {
          "id": "666",
          "type": "companies",
        },
      },
    },
    "type": "users",
  },
}
`;

exports[`serialize with a 1:1 relationship with includes with a local id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "1234",
    "relationships": Object {
      "company": Object {
        "data": Object {
          "lid": "612",
          "type": "companies",
        },
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "lid": "612",
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with a 1:1 relationship with includes with a normal id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "1234",
    "relationships": Object {
      "company": Object {
        "data": Object {
          "id": "612",
          "type": "companies",
        },
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "id": "612",
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with a 1:n relationship when no relationship identifier is found™ ignores the faulty relationship and serializes the valid one 1`] = `
Object {
  "data": Object {
    "id": "123",
    "relationships": Object {
      "companies": Object {
        "data": Array [
          Object {
            "id": "666",
            "type": "companies",
          },
        ],
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "id": "666",
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with a 1:n relationship with a local id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "companies": Object {
        "data": Array [
          Object {
            "lid": "666",
            "type": "companies",
          },
          Object {
            "id": "667",
            "type": "companies",
          },
        ],
      },
    },
    "type": "users",
  },
}
`;

exports[`serialize with a 1:n relationship with a normal id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "companies": Object {
        "data": Array [
          Object {
            "id": "666",
            "type": "companies",
          },
          Object {
            "id": "667",
            "type": "companies",
          },
        ],
      },
    },
    "type": "users",
  },
}
`;

exports[`serialize with a 1:n relationship with a polymorphic relationship serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "organizations": Object {
        "data": Array [
          Object {
            "id": "666",
            "type": "companies",
          },
          Object {
            "id": "667",
            "type": "multiplier-organizations",
          },
        ],
      },
    },
    "type": "users",
  },
}
`;

exports[`serialize with a 1:n relationship with includes with a local id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "companies": Object {
        "data": Array [
          Object {
            "lid": "666",
            "type": "companies",
          },
          Object {
            "id": "667",
            "type": "companies",
          },
        ],
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "lid": "666",
      "type": "companies",
    },
    Object {
      "attributes": Object {
        "name": "Compeon 4.0 GmbH",
      },
      "id": "667",
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with a 1:n relationship with includes with a normal id serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "companies": Object {
        "data": Array [
          Object {
            "id": "666",
            "type": "companies",
          },
          Object {
            "id": "667",
            "type": "companies",
          },
        ],
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "id": "666",
      "type": "companies",
    },
    Object {
      "attributes": Object {
        "name": "Compeon 4.0 GmbH",
      },
      "id": "667",
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with a 1:n relationship with includes with deeply nested relationships serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "relationships": Object {
      "company": Object {
        "data": Object {
          "id": "12",
          "type": "companies",
        },
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "date": "19.03.2017",
      },
      "id": "95123",
      "type": "versions",
    },
    Object {
      "attributes": Object {
        "name": "Tag 1",
      },
      "id": "66",
      "relationships": Object {
        "version": Object {
          "data": Object {
            "id": "95123",
            "type": "versions",
          },
        },
      },
      "type": "tags",
    },
    Object {
      "attributes": Object {
        "name": "New sideposted tag",
      },
      "lid": "777",
      "type": "tags",
    },
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "id": "12",
      "relationships": Object {
        "tags": Object {
          "data": Array [
            Object {
              "id": "66",
              "type": "tags",
            },
            Object {
              "lid": "777",
              "type": "tags",
            },
          ],
        },
      },
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with a 1:n relationship with includes with duplicate includes serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "511",
    "relationships": Object {
      "company": Object {
        "data": Object {
          "id": "666",
          "type": "companies",
        },
      },
      "employees": Object {
        "data": Array [
          Object {
            "id": "152",
            "type": "users",
          },
        ],
      },
    },
    "type": "users",
  },
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon GmbH",
      },
      "id": "666",
      "type": "companies",
    },
    Object {
      "attributes": Object {
        "firstName": "Arno",
        "lastName": "Apitester",
      },
      "id": "152",
      "relationships": Object {
        "company": Object {
          "data": Object {
            "id": "666",
            "type": "companies",
          },
        },
      },
      "type": "users",
    },
  ],
}
`;

exports[`serialize with simple attributes with a primitive data type serializes an empty resource 1`] = `
Object {
  "data": Object {
    "type": "users",
  },
}
`;

exports[`serialize with simple attributes with an array of resources and attributes serializes the data 1`] = `
Object {
  "data": Array [
    Object {
      "attributes": Object {
        "firstName": "Nico",
        "lastName": "Peters",
      },
      "id": "123",
      "type": "user",
    },
    Object {
      "attributes": Object {
        "firstName": "Frank",
        "lastName": "Wüller",
      },
      "id": "134",
      "relationships": Object {
        "company": Object {
          "data": Object {
            "id": "66",
            "type": "companies",
          },
        },
      },
      "type": "user",
    },
  ],
  "included": Array [
    Object {
      "attributes": Object {
        "name": "Compeon",
      },
      "id": "66",
      "type": "companies",
    },
  ],
}
`;

exports[`serialize with simple attributes with an array of resources and no attributes serializes the data 1`] = `
Object {
  "data": Array [
    Object {
      "id": "123",
      "type": "user",
    },
    Object {
      "id": "134",
      "type": "user",
    },
  ],
}
`;

exports[`serialize with simple attributes with empty attributes serializes no attributes key 1`] = `
Object {
  "data": Object {
    "id": "125",
    "type": "users",
  },
}
`;

exports[`serialize with simple attributes with valid data serializes the data 1`] = `
Object {
  "data": Object {
    "attributes": Object {
      "firstName": "Nico",
      "lastName": "Peters",
    },
    "id": "123",
    "type": "users",
  },
}
`;
